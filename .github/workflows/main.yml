name: Test ðŸ”§ & Build ðŸ“¦

on:
  pull_request: {}
  push:
    branches:
      - master
      - 'development'

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:

  buildAndTest:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - Tank-Wrecks
        unityVersion:
          - 2019.4.4f1
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
        testMode:
          - playmode
          - editmode

    steps:

      # Checks out to branch
      - name: Checkout to branch
        uses: actions/checkout@v2
        with:
          lfs: true
      
      # Caches Unity Library for faster tests
      - name: Cache Unity library
        uses: actions/cache@v1.1.0
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-

      # Runs tests
      - name: Unity - Run tests
        uses: webbertakken/unity-test-runner@v1.6
        id: testRunner
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}

      # Uploads test artifacts
      - name: Upload test artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}

      # Builds for target platforms
      - name: Unity - Build to target platforms
        uses: webbertakken/unity-builder@v1.1
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}

      # Uploads builds
      - name: Upload build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build

      # Return license
      - name: Return license
        uses: webbertakken/unity-return-license@v1
        if: always()